apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ servicerouteSAName }}
  namespace: tsb
---
apiVersion: v1
kind: Pod
metadata:
  name: {{ podName }}
  namespace: tsb
spec:
  containers:
  - image: amd64/ubuntu:focal
    name: tctl-container
    command: [ "/bin/bash", "-c", "--" ]
    args:
    - |
      apt update && apt install curl -y
      curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
      IP=$(kubectl get svc envoy -n tsb -o "jsonpath={.status.loadBalancer.ingress[0].ip}")
      echo "IP = $IP"
      mkdir -p ~/.tctl/bin
      curl -Lo ~/.tctl/bin/tctl https://binaries.dl.tetrate.io/public/raw/versions/linux-amd64-1.2.0/tctl
      chmod +x ~/.tctl/bin/tctl
      export PATH=$PATH:~/.tctl/bin
      tctl config clusters set demo --bridge-address $IP:8443
      tctl config users set admin --username admin --password "{{ password }}"
      tctl config profiles set demo --username admin --cluster demo
      tctl config profiles set-current demo
      tctl login --org {{ orgName }} --password "{{ password }}" --username admin --tenant {{ tenant }}

      cat >version1.yaml<<EOF
      apiVersion: traffic.tsb.tetrate.io/v2
      kind: ServiceRoute
      Metadata:
        organization: {{ orgName }}
        name: {{ serviceRouteName }}
        group: {{ groupName }}
        workspace: {{ workspaceName }}
        tenant: {{ tenant }}
      spec:
        service: {{ ns }}/{{ hostFQDN }}
        subsets:
        - name: v1
          labels:
            version: v1
          weight: 50
        - name: v2
          labels:
            version: v2
          weight: 20
        - name: v3
          labels:
            version: v3
          weight: 30
      EOF
        
      cat >version2.yaml<<EOF
      apiVersion: traffic.tsb.tetrate.io/v2
      kind: ServiceRoute
      Metadata:
        organization: {{ orgName }}
        name: {{ serviceRouteName }}
        group: {{ groupName }}
        workspace: {{ workspaceName }}
        tenant: {{ tenant }}
      spec:
        service: {{ ns }}/{{ hostFQDN }}
        subsets:
        - name: v1
          labels:
            version: v1
          weight: 60
        - name: v2
          labels:
            version: v2
          weight: 30
        - name: v3
          labels:
            version: v3
          weight: 10
      EOF
      while :; do
        echo "Applying version 1"
        tctl apply -f version1.yaml
        sleep 100
        echo "Applying version 2"
        tctl apply -f version2.yaml
        sleep 100
      done
  serviceAccount: {{ servicerouteSAName }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: tsb
  name: {{ servicerouteSAName }}-reader
rules:
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "list"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ servicerouteSAName }}-binding
  namespace: tsb
subjects:
- kind: ServiceAccount
  name: {{ servicerouteSAName }}
  namespace: tsb
roleRef:
  kind: Role
  name: {{ servicerouteSAName }}-reader
  apiGroup: ""
